{
  "active": false,
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Topic Chooser and Title Maker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Wordpress Post Draft",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Topic Chooser and Title Maker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Article Generator": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Upload Image to WP": {
      "main": [
        [
          {
            "node": "Wordpress - Set Featured Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wordpress Post Draft": {
      "main": [
        [
          {
            "node": "OpenAI - Generate Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI - Generate Image": {
      "main": [
        [
          {
            "node": "Upload Image to WP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Topic Chooser and Title Maker": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wordpress - Set Featured Image": {
      "main": [
        [
          {
            "node": "Send to Discord Using Webhook",
            "type": "main",
            "index": 0
          },
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Topic Chooser and Title Maker Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Topic Chooser and Title Maker",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Title, category, meta, keyphrase generator": {
      "ai_languageModel": [
        [
          {
            "node": "Topic Chooser and Title Maker",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-16T19:12:43.357Z",
  "id": "SseXORFCOojZjxrj",
  "meta": null,
  "name": "Generate & Publish SEO-Optimized WordPress Blog",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "Do as instructed!",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are an expert SEO blog writer for “Dax AI,” specializing in Technology and Artificial Intelligence content. For each request, you must:\n\n1. Randomly select one category (exactly as shown):\n   – Technology\n   – Artificial Intelligence (AI)\n   – Tech Fact\n   – Tech History\n   – Tech Tips\n\n2. Create:\n   • A unique, non-robotic article title (no colons “:”, clickbait is OK but don’t exaggerate).  \n   • A URL-friendly slug (lowercase, hyphens).  \n   • A focus keyphrase (max 2 words, capturing the main idea).  \n   • A meta description (≤160 characters, summarizing the article).\n\n3. Use the current year placeholder {{ $json.Year }} if needed in the title.\n\nOutput exactly in this format:\nCategory: <chosen category>\nTitle: <your title>\nSlug: <your-slug>\nFocus Keyphrase: <max 2 words>\nMeta Description: <≤160 characters>"
            }
          ]
        }
      },
      "id": "304ccd1b-e4b3-42e1-a1b4-99e9b879f2cd",
      "name": "Topic Chooser and Title Maker",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        720,
        120
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Write a comprehensive, 1,500–2,500-word article using the following inputs:\n\n• Title: {{ $json.output.title }}\n• Category: {{ $json.output.category }}\n• Focus Phrase: {{ $json.output.focus_phrase }}\n\nRequirements:\n\nTitle:\n  – Craft an engaging title that includes the focus phrase.\n  - Do not add title in the body\n\nIntroduction (100–150 words)\n  - Dont use word \"Introduction\"\n  – Hook the reader.\n  – Include the focus phrase.\n\nBody Structure\n  - Do Not Add Title In the body\n  – Use 4–6 H2 subheadings, with 1–2 H3s beneath each as needed.\n  – Ensure the focus phrase appears in at least one H2 or H3.\n  – Sprinkle the focus phrase naturally throughout—minimum 4 times, maximum 16 times.\n  – Use bullet lists, examples, data or quotes to illustrate key points.\n  - add outbound link if available\n\nTone & Style\n  – Friendly yet authoritative.\n  – Clear, concise paragraphs (2–4 sentences each).\n  – Smooth transitions and varied sentence structure.\n\nConclusion & Call to Action\n  - Don't use starting \"Conclusion\"\n  – Summarize the key takeaways.\n  – End with a compelling call to action or next step.\n  - add available to contact cta (\"khmuhtadin.com\")\n\nEnsure flawless grammar, optimal keyword density, and readability for a general audience.",
        "messages": {
          "messageValues": [
            {
              "message": "=You are an elite blog writer for Dax AI, tasked with producing highly valuable, SEO-optimized, audience-focused long-form articles suitable for direct publication in WordPress. When given a topic or title, follow these rules precisely:\n\n1. Content Focus\n  - Deliver practical tips, clear strategies, in-depth insights or step-by-step guides directly related to the topic.\n  - Prioritize original, actionable advice that readers can implement immediately.\n\n2. Article Length & Structure\n  - Minimum 1,500 words.\n  - Use clear hierarchical headings (H2, H3, H4) to organize sections and subsections.\n  - Ensure each section flows logically, with introductions, transitions, and conclusions where appropriate.\n\n3. SEO Optimization\n  - Make content scannable: use short paragraphs, subheadings, and bulleted or numbered lists.\n  - Naturally incorporate relevant keywords without keyword stuffing.\n  - Write an engaging, concise meta description (under 160 characters) at the top.\n\n4. WordPress-Compatible Formatting\n  - Output plain text only—no Markdown, no code fences, no additional commentary.\n  - Format headings as WordPress recognizes (e.g., “<h2>Section Title</h2>” or using the WordPress editor’s native heading styles).\n  - For lists, use a simple dash or number followed by a space (e.g., “– Android Automation Apps:” or “1. Step one”) never make it bols (e.g., \"- **product 1**\").\n  - Do not include the article title, any author bylines, or any formatting instructions—only the body content.\n\n5. Final Output\n  – Only the article body in ready-to-publish WordPress format.\n  – No extra notes, disclaimers, or explanations.\n  – Confirm compliance by immediately starting with the first section heading when writing.\n"
            }
          ]
        }
      },
      "id": "e0122aa5-9404-41e0-aa12-b97cefa54739",
      "name": "Basic LLM Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        1040,
        120
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"category\": \"Technology\",\n\t\"title\": \"Article Title\",\n    \"slug\": \"article-slug\",\n\t\"focus_phrase\": \"focus phrase for SEO\",\n\t\"meta_description\": \"meta description under 160 characters\"\n}"
      },
      "id": "0d34c286-fc08-4c7f-ae5e-ce81e3899ebe",
      "name": "Topic Chooser and Title Maker Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        900,
        320
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "title": "={{ $('Topic Chooser and Title Maker').item.json.output.title }}",
        "additionalFields": {
          "authorId": 1,
          "content": "={{ $json.text }}",
          "slug": "={{ $('Topic Chooser and Title Maker').item.json.output.slug }}",
          "status": "publish",
          "format": "standard",
          "categories": "={{ $('Topic Chooser and Title Maker').item.json.output.category == \"Technology\" ? [3] :\n    $('Topic Chooser and Title Maker').item.json.output.category == \"Artificial Intelligence (AI)\" ? [4] :\n    $('Topic Chooser and Title Maker').item.json.output.category == \"Tech Fact\" ? [7] :\n    $('Topic Chooser and Title Maker').item.json.output.category == \"Tech History\" ? [8] :\n    $('Topic Chooser and Title Maker').item.json.output.category == \"Tech Tips\" ? [9] : [1] }}"
        }
      },
      "id": "a7709657-1af1-4679-bdf5-378c5580c365",
      "name": "Wordpress Post Draft",
      "type": "n8n-nodes-base.wordpress",
      "position": [
        740,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "image",
        "prompt": "=Create a highly realistic, natural-looking image that visually represents the blog article titled \"{{ $json.title.raw }}\". The image should be grounded in reality with believable lighting, textures, and composition—avoid fantasy or surreal elements. Focus on lifelike details that a real camera could capture. Do not include any text in the image.",
        "options": {
          "size": "1024x1024",
          "style": "vivid"
        }
      },
      "id": "01c26358-554d-48d1-afbb-4a587712dd26",
      "name": "OpenAI - Generate Image",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        940,
        460
      ],
      "typeVersion": 1.8
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://cartilo.my.id/wp-json/wp/v2/media",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "wordpressApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "image/png"
            },
            {
              "name": "Content-Disposition",
              "value": "=attachment; filename={{$now.toMillis()}}.png"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "id": "891a98ad-fbc9-4500-abab-0d6811550e91",
      "name": "Upload Image to WP",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1140,
        460
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://cartilo.my.id/wp-json/wp/v2/posts/{{ $('Wordpress Post Draft').item.json.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "wordpressApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "featured_media",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5562d985-5f60-486e-a61c-7b7d38b03404",
      "name": "Wordpress - Set Featured Image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1340,
        440
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 3
            }
          ]
        }
      },
      "id": "108ce42a-848b-48b5-af66-48ee38afd119",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        320,
        300
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "model": "google/gemini-2.5-flash-preview",
        "options": {}
      },
      "id": "d985df02-0bd3-41cd-bb34-82e51c212362",
      "name": "Title, category, meta, keyphrase generator",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "position": [
        740,
        320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=Published!\n{{ $json.link }}",
        "options": {},
        "embeds": {
          "values": [
            {}
          ]
        }
      },
      "id": "00519c50-195e-4f0c-a34c-df144d628e2c",
      "name": "Send to Discord Using Webhook",
      "type": "n8n-nodes-base.discord",
      "position": [
        1580,
        380
      ],
      "webhookId": "722513b9-8a0c-4ba1-b0ee-c712d8fb0af6",
      "typeVersion": 2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "3f82dfbc-caaf-43f7-a660-ae22b1f87418",
      "name": "Article Generator",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1060,
        320
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "b1f8cd40-489b-44de-a7e7-a018351f5f0a",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        220,
        60
      ],
      "webhookId": "a9b697dc-5b4e-418c-83ed-54966ce7ea34",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "3dbc34fc-8457-422f-807e-123b5f16bd0c",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "generate"
            }
          ]
        },
        "options": {}
      },
      "id": "b26184d5-083b-4855-8807-da72ee598e99",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        400,
        60
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "=Published!\n\n{{ $json.link }}",
        "additionalFields": {}
      },
      "id": "da140df0-11ae-47f0-aabe-ac9274f05e94",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1580,
        600
      ],
      "webhookId": "29c01d67-35b0-4234-92dd-c729fcb6fe7e",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "## Workflow Description\nThis workflow generates and publishes SEO-optimized WordPress blog posts using AI:\n\n1. Triggers: Runs every 3 hours (Schedule Trigger) or via Telegram ('generate').\n2. Generates a category, title, slug, focus keyphrase, and meta description with OpenRouter.\n3. Writes a 1,500–2,500-word article using OpenAI GPT-4.1-mini.\n4. Publishes the article to WordPress.\n5. Creates a featured image with OpenAI and uploads it.\n6. Notifies Discord and Telegram with the post link.",
        "height": 260,
        "width": 760
      },
      "id": "dd2075b6-a128-4509-a0fe-92c228ad340f",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        220,
        -240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Setup Instructions\nTo use this workflow, set up the following credentials in n8n:\n\n- WordPress API: Provide the URL, username, and password for your WordPress site.\n- OpenAI API: Provide your OpenAI API key.\n- OpenRouter API: Provide your OpenRouter API key.\n- Discord Webhook: Create a webhook in your Discord server and provide the URL.\n- Telegram API: Provide the token for your Telegram bot.\n\nn8n will prompt you to install any missing nodes upon import.\n\n",
        "height": 280,
        "width": 620
      },
      "id": "b7710188-683d-4e0a-b7ea-2d82336903aa",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        200,
        680
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-05-16T19:12:55.000Z",
  "versionId": "5c09fa6f-044f-4bd5-829e-941c11fa5439"
}